@page "/rework"
@using MES.Common
@inject HttpClient Http

<PageTitle>Rework</PageTitle>

<div class="container mt-4">
    <h1>Rework Part</h1>
    <div class="mb-3">
        <label for="serialInput" class="form-label">Serial Number</label>
        <input id="serialInput" class="form-control" @bind="serialNumber" />
    </div>
    <button class="btn btn-primary mb-3" @onclick="SearchPart">Search</button>

    @if (isSearching)
    {
        <div class="text-muted">Searching...</div>
    }
    else if (searchError != null)
    {
        <div class="alert alert-danger">@searchError</div>
    }
    else if (foundPart != null)
    {
        <PartDetails Part="foundPart" />
        <div class="mt-3">
            <button class="btn btn-success me-2" @onclick='() => UpdateStatus("Good")'>Mark Good</button>
            <button class="btn btn-danger" @onclick='() => UpdateStatus(" Bad")'>Mark Bad</button>


        </div>
        @if (updateMessage != null)
        {
            <div class="alert alert-info mt-2">@updateMessage</div>
        }
    }
</div>

@code {
    private string serialNumber = string.Empty;
    private PartData? foundPart;
    private bool isSearching = false;
    private string? searchError;
    private string? updateMessage;

    private async Task SearchPart()
    {
        isSearching = true;
        searchError = null;
        foundPart = null;
        updateMessage = null;

        try
        {
            // Replace with your actual API endpoint for searching by serial number
            foundPart = await Http.GetFromJsonAsync<PartData>($"https://localhost:7195/api/PartData/serial/{serialNumber}");
            if (foundPart == null)
            {
                searchError = "Part not found.";
            }
        }
        catch (Exception ex)
        {
            searchError = $"Error: {ex.Message}";
        }
        finally
        {
            isSearching = false;
        }
    }

    private async Task UpdateStatus(string status)
    {
        if (foundPart == null)
            return;

        try
        {
            foundPart.Status = status;
            var response = await Http.PutAsJsonAsync($"https://localhost:7195/api/PartData/{foundPart.PartId}", foundPart);
            if (response.IsSuccessStatusCode)
            {
                updateMessage = $"Status updated to '{status}'.";
            }
            else
            {
                updateMessage = $"Failed to update status.";
            }
        }
        catch (Exception ex)
        {
            updateMessage = $"Error: {ex.Message}";
        }
    }
}
